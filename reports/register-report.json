{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-28T02:59:31.297Z",
    "end": "2024-11-28T02:59:34.698Z",
    "duration": 3401,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0cdd23e9-4dd8-4b13-8406-0335de4cb053",
      "title": "",
      "fullFile": "C:\\Users\\USER\\Desktop\\Proyectos\\AlfashopVite\\src\\tests\\registerTest.spec.js",
      "file": "\\src\\tests\\registerTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb47fdbf-839c-402c-b0fc-a914f8115226",
          "title": "Pruebas de Registro",
          "fullFile": "C:\\Users\\USER\\Desktop\\Proyectos\\AlfashopVite\\src\\tests\\registerTest.spec.js",
          "file": "\\src\\tests\\registerTest.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de Registro\"",
              "fullTitle": "Pruebas de Registro \"before all\" hook in \"Pruebas de Registro\"",
              "timedOut": false,
              "duration": 914,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ef1f13a6-e966-4a5a-8c71-59e6428e3ec2",
              "parentUUID": "bb47fdbf-839c-402c-b0fc-a914f8115226",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de Registro\"",
              "fullTitle": "Pruebas de Registro \"after all\" hook in \"Pruebas de Registro\"",
              "timedOut": false,
              "duration": 89,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "78316762-003e-4c4a-82fb-d211be9ad598",
              "parentUUID": "bb47fdbf-839c-402c-b0fc-a914f8115226",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Debe completar el formulario de registro y mostrar un mensaje de éxito",
              "fullTitle": "Pruebas de Registro Debe completar el formulario de registro y mostrar un mensaje de éxito",
              "timedOut": false,
              "duration": 2390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    // Abre la aplicación en la ruta del componente Register\n    await driver.get('http://localhost:5173/register'); // Cambia la URL según tu configuración\n    // Completa los campos del formulario\n    await driver.findElement(By.name('nombre')).sendKeys('John');\n    await driver.findElement(By.name('apellido')).sendKeys('Doe');\n    await driver.findElement(By.name('email')).sendKeys('johndoe696@example.com');\n    await driver.findElement(By.name('contrasena')).sendKeys('password123');\n    await driver.findElement(By.name('telefono')).sendKeys('1234567890');\n    // Abre el calendario de Material-UI\n    const calendarButton = await driver.findElement(\n        By.xpath('//button[@aria-label=\"Choose new calendar date\"]')\n    );\n    await calendarButton.click();\n    // Espera a que se cargue el menú del calendario\n    await driver.wait(until.elementLocated(By.className('MuiPickersDay-root')), 5000);\n    // Selecciona el día específico (por ejemplo, el día 22)\n    const dayButton = await driver.findElement(By.xpath('//button[@data-timestamp=\"1732251600000\"]'));\n    await dayButton.click();\n    // Haz clic en el botón de registro\n    const registerButton = await driver.findElement(By.xpath('//button[text()=\"Registrarse\"]'));\n    await registerButton.click();\n    // Espera y valida el mensaje de éxito en el elemento <h2>\n    const successMessage = await driver.wait(\n        until.elementLocated(By.xpath('//h2[@id=\"swal2-title\" and text()=\"Registro exitoso\"]')),\n        5000\n    );\n    const messageText = await successMessage.getText();\n    assert.strictEqual(messageText, 'Registro exitoso');\n} catch (err) {\n    throw new Error('Error durante la prueba: ' + err.message);\n}",
              "err": {},
              "uuid": "070557c2-ab6c-4e08-bece-c69ebccb168b",
              "parentUUID": "bb47fdbf-839c-402c-b0fc-a914f8115226",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "070557c2-ab6c-4e08-bece-c69ebccb168b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "register-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "register-report",
        "inlineAssets": "true"
      },
      "version": "6.2.0"
    }
  }
}